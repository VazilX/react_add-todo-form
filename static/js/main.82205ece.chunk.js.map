{"version":3,"sources":["App.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","index.tsx"],"names":["users","UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","getTodoId","ids","todosFromServer","Math","max","getUser","find","todosForWork","usersFromServer","userTodo","App","useState","setTodos","setUserId","hasUser","setHasUser","hasTitle","setHasTitle","baseTodoId","newTodo","setNewTodo","action","method","onSubmit","e","preventDefault","hasErrorValid","trim","prevTodo","htmlFor","type","placeholder","onChange","target","value","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82205ece.chunk.js","sourcesContent":["import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { TodoFromServer } from './types/TodoFromServer';\n\nconst getTodoId = () => {\n  const ids = todosFromServer.map(todo => todo.id);\n\n  return Math.max(...ids) + 1;\n};\n\nconst getUser = (users: User[], userId: number) => {\n  return users.find(user => user.id === userId) as User;\n};\n\nconst getFoolTodo = (todos: TodoFromServer[], users: User[]) => {\n  const foolTodo = todos.map(todo => {\n    const userTodo = getUser(users, todo.userId);\n\n    return {\n      ...todo,\n      user: userTodo,\n    };\n  });\n\n  return foolTodo;\n};\n\nconst todosForWork = getFoolTodo(todosFromServer, usersFromServer);\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosForWork);\n  const [userId, setUserId] = useState(0);\n  const [hasUser, setHasUser] = useState(true);\n  const [hasTitle, setHasTitle] = useState(true);\n\n  const baseTodoId = {\n    id: getTodoId(),\n    title: '',\n    completed: false,\n    userId: 0,\n    user: {\n      id: 0,\n      name: '',\n      username: '',\n      email: '',\n    },\n  };\n\n  const [newTodo, setNewTodo] = useState(baseTodoId);\n\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setNewTodo(prevTodo => ({\n      ...prevTodo,\n      userId: +e.target.value,\n      user: getUser(usersFromServer, +e.target.value),\n    }));\n    setHasUser(true);\n  };\n\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodo(prevTodo => ({\n      ...prevTodo,\n      title: e.target.value.replace(/[^\\d\\s\\u0400-\\u04FFa-zA-Z]/g, ''),\n    }));\n    setHasTitle(true);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    let hasErrorValid = false;\n\n    if (userId === 0) {\n      setHasUser(false);\n      hasErrorValid = true;\n    }\n\n    if (newTodo.title.trim() === '') {\n      setHasTitle(false);\n      hasErrorValid = true;\n    }\n\n    if (hasErrorValid) {\n      return;\n    }\n\n    setTodos(prevTodo => ([...prevTodo, newTodo]));\n    setNewTodo(prevTodo => ({\n      ...prevTodo,\n      id: prevTodo.id + 1,\n      title: '',\n      userId: 0,\n    }));\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title</label>\n          <br />\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            onChange={handleChangeTitle}\n            value={newTodo.title}\n          />\n          {hasTitle || <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">Choose a user</label>\n          <br />\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n            id=\"userSelect\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUser || <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={`${todo.id}`}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo\n        user={todo.user}\n      />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}